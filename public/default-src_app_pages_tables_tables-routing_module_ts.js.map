{"version":3,"file":"default-src_app_pages_tables_tables-routing_module_ts.js","mappings":"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","sources":["./src/app/pages/tables/smart-table/smart-table.component.ts","./src/app/pages/tables/smart-table/smart-table.component.html","./src/app/pages/tables/tables-routing.module.ts","./src/app/pages/tables/tables.component.ts","./src/app/pages/tables/tree-grid/tree-grid.component.ts","./src/app/pages/tables/tree-grid/tree-grid.component.html","./src/app/pages/tables/users/users.component.ts","./src/app/pages/tables/users/users.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\nimport { SmartTableData } from '../../../@core/data/smart-table';\r\n\r\n@Component({\r\n  selector: 'ngx-smart-table',\r\n  templateUrl: './smart-table.component.html',\r\n  styleUrls: ['./smart-table.component.scss'],\r\n})\r\nexport class SmartTableComponent {\r\n\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    columns: {\r\n      id: {\r\n        title: 'ID',\r\n        type: 'number',\r\n      },\r\n      firstName: {\r\n        title: 'First Name',\r\n        type: 'string',\r\n      },\r\n      lastName: {\r\n        title: 'Last Name',\r\n        type: 'string',\r\n      },\r\n      username: {\r\n        title: 'Username',\r\n        type: 'string',\r\n      },\r\n      email: {\r\n        title: 'E-mail',\r\n        type: 'string',\r\n      },\r\n      age: {\r\n        title: 'Age',\r\n        type: 'number',\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n\r\n  constructor(private service: SmartTableData) {\r\n    const data = this.service.getData();\r\n    this.source.load(data);\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      event.confirm.resolve();\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    Smart Table\r\n  </nb-card-header>\r\n\r\n  <nb-card-body>\r\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\" (deleteConfirm)=\"onDeleteConfirm($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TablesComponent } from './tables.component';\r\nimport { SmartTableComponent } from './smart-table/smart-table.component';\r\nimport { TreeGridComponent } from './tree-grid/tree-grid.component';\r\nimport { SmartUserTableComponent } from './users/users.component';\r\n\r\nconst routes: Routes = [{\r\n  path: '',\r\n  component: TablesComponent,\r\n  children: [\r\n    {\r\n      path: 'users',\r\n      component: SmartUserTableComponent         ,\r\n    },\r\n    {\r\n      path: 'tree-grid',\r\n      component: TreeGridComponent,\r\n    },\r\n  ],\r\n}];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TablesRoutingModule { }\r\n\r\nexport const routedComponents = [\r\n  TablesComponent,\r\n  SmartTableComponent,\r\n  TreeGridComponent,\r\n  SmartUserTableComponent\r\n];\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-tables',\r\n  template: `<router-outlet></router-outlet>`,\r\n})\r\nexport class TablesComponent {\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { NbSortDirection, NbSortRequest, NbTreeGridDataSource, NbTreeGridDataSourceBuilder } from '@nebular/theme';\r\n\r\ninterface TreeNode<T> {\r\n  data: T;\r\n  children?: TreeNode<T>[];\r\n  expanded?: boolean;\r\n}\r\n\r\ninterface FSEntry {\r\n  name: string;\r\n  size: string;\r\n  kind: string;\r\n  items?: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-tree-grid',\r\n  templateUrl: './tree-grid.component.html',\r\n  styleUrls: ['./tree-grid.component.scss'],\r\n})\r\nexport class TreeGridComponent {\r\n  customColumn = 'name';\r\n  defaultColumns = [ 'size', 'kind', 'items' ];\r\n  allColumns = [ this.customColumn, ...this.defaultColumns ];\r\n\r\n  dataSource: NbTreeGridDataSource<FSEntry>;\r\n\r\n  sortColumn: string;\r\n  sortDirection: NbSortDirection = NbSortDirection.NONE;\r\n\r\n  constructor(private dataSourceBuilder: NbTreeGridDataSourceBuilder<FSEntry>) {\r\n    this.dataSource = this.dataSourceBuilder.create(this.data);\r\n  }\r\n\r\n  updateSort(sortRequest: NbSortRequest): void {\r\n    this.sortColumn = sortRequest.column;\r\n    this.sortDirection = sortRequest.direction;\r\n  }\r\n\r\n  getSortDirection(column: string): NbSortDirection {\r\n    if (this.sortColumn === column) {\r\n      return this.sortDirection;\r\n    }\r\n    return NbSortDirection.NONE;\r\n  }\r\n\r\n  private data: TreeNode<FSEntry>[] = [\r\n    {\r\n      data: { name: 'Projects', size: '1.8 MB', items: 5, kind: 'dir' },\r\n      children: [\r\n        { data: { name: 'project-1.doc', kind: 'doc', size: '240 KB' } },\r\n        { data: { name: 'project-2.doc', kind: 'doc', size: '290 KB' } },\r\n        { data: { name: 'project-3', kind: 'txt', size: '466 KB' } },\r\n        { data: { name: 'project-4.docx', kind: 'docx', size: '900 KB' } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Reports', kind: 'dir', size: '400 KB', items: 2 },\r\n      children: [\r\n        { data: { name: 'Report 1', kind: 'doc', size: '100 KB' } },\r\n        { data: { name: 'Report 2', kind: 'doc', size: '300 KB' } },\r\n      ],\r\n    },\r\n    {\r\n      data: { name: 'Other', kind: 'dir', size: '109 MB', items: 2 },\r\n      children: [\r\n        { data: { name: 'backup.bkp', kind: 'bkp', size: '107 MB' } },\r\n        { data: { name: 'secret-note.txt', kind: 'txt', size: '2 MB' } },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  getShowOn(index: number) {\r\n    const minWithForMultipleColumns = 400;\r\n    const nextColumnStep = 100;\r\n    return minWithForMultipleColumns + (nextColumnStep * index);\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ngx-fs-icon',\r\n  template: `\r\n    <nb-tree-grid-row-toggle [expanded]=\"expanded\" *ngIf=\"isDir(); else fileIcon\">\r\n    </nb-tree-grid-row-toggle>\r\n    <ng-template #fileIcon>\r\n      <nb-icon icon=\"file-text-outline\"></nb-icon>\r\n    </ng-template>\r\n  `,\r\n})\r\nexport class FsIconComponent {\r\n  @Input() kind: string;\r\n  @Input() expanded: boolean;\r\n\r\n  isDir(): boolean {\r\n    return this.kind === 'dir';\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-body>\r\n\r\n    <label class=\"search-label\" for=\"search\">Search:</label>\r\n    <input nbInput [nbFilterInput]=\"dataSource\" id=\"search\" class=\"search-input\">\r\n\r\n    <table [nbTreeGrid]=\"dataSource\" [nbSort]=\"dataSource\" (sort)=\"updateSort($event)\">\r\n\r\n      <tr nbTreeGridHeaderRow *nbTreeGridHeaderRowDef=\"allColumns\"></tr>\r\n      <tr nbTreeGridRow *nbTreeGridRowDef=\"let row; columns: allColumns\"></tr>\r\n\r\n      <ng-container [nbTreeGridColumnDef]=\"customColumn\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(customColumn)\" *nbTreeGridHeaderCellDef>\r\n          {{customColumn}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">\r\n          <ngx-fs-icon [kind]=\"row.data.kind\" [expanded]=\"row.expanded\"></ngx-fs-icon>\r\n          {{row.data[customColumn]}}\r\n        </td>\r\n      </ng-container>\r\n\r\n      <ng-container *ngFor=\"let column of defaultColumns; let index = index\"\r\n                    [nbTreeGridColumnDef]=\"column\"\r\n                    [showOn]=\"getShowOn(index)\">\r\n        <th nbTreeGridHeaderCell [nbSortHeader]=\"getSortDirection(column)\" *nbTreeGridHeaderCellDef>\r\n          {{column}}\r\n        </th>\r\n        <td nbTreeGridCell *nbTreeGridCellDef=\"let row\">{{row.data[column] || '-'}}</td>\r\n      </ng-container>\r\n\r\n    </table>\r\n\r\n  </nb-card-body>\r\n</nb-card>\r\n","import { Component } from \"@angular/core\";\r\nimport { LocalDataSource } from \"ng2-smart-table\";\r\nimport { AuthServiceService } from \"../../../auth/service/auth/auth-service.service\";\r\n\r\ninterface Users {\r\n  userName: string;\r\n  password: string;\r\n  surName: string; // Add the missing form field data here\r\n  enable: boolean;\r\n  email: string;\r\n  phone: string;\r\n  firstName: string; // Add the missing form field data here\r\n  roles: string[]; // Assuming roles is an array of strings\r\n}\r\n@Component({\r\n  selector: \"ngx-smart-table\",\r\n  templateUrl: \"./users.component.html\",\r\n  styleUrls: [\"./smart-table.component.scss\"],\r\n})\r\nexport class SmartUserTableComponent {\r\n  data: Users[] = [];\r\n  lastId: number = 0;\r\n  settings = {\r\n    add: {\r\n      addButtonContent: '<i class=\"nb-plus\"></i>',\r\n      createButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    edit: {\r\n      editButtonContent: '<i class=\"nb-edit\"></i>',\r\n      saveButtonContent: '<i class=\"nb-checkmark\"></i>',\r\n      cancelButtonContent: '<i class=\"nb-close\"></i>',\r\n    },\r\n    delete: {\r\n      deleteButtonContent: '<i class=\"nb-trash\"></i>',\r\n      confirmDelete: true,\r\n    },\r\n    actions: { add: true },\r\n    mode: \"external\",\r\n    columns: {\r\n      surName: {\r\n        title: \"Phone number\",\r\n        type: \"string\",\r\n      },\r\n      firstName: {\r\n        title: \"Name\",\r\n        type: \"string\",\r\n      },\r\n      userName: {\r\n        title: \"Username\",\r\n        type: \"string\",\r\n      },\r\n      email: {\r\n        title: \"E-mail\",\r\n        type: \"string\",\r\n      },\r\n      enable: {\r\n        title: \"Actif\",\r\n        type: \"bool\",\r\n      },\r\n    },\r\n  };\r\n\r\n  source: LocalDataSource = new LocalDataSource();\r\n  selectingOrDeselecting: Boolean = false;\r\n\r\n  constructor(private service: AuthServiceService) {\r\n    this.service.getUser().subscribe((users: Users[]) => {\r\n      this.data = users;\r\n      console.log(\"Logger >>>>>>>>>>>>>>>>\", this.data);\r\n      this.source.load(this.data);\r\n    });\r\n    this.source.load(this.data);\r\n  }\r\n\r\n  onDeleteConfirm(event): void {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      event.confirm.resolve();\r\n      console.log(\"data\");\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n    console.log(\"data deleted\");\r\n  }\r\n\r\n  rowDeselect(event: any) {\r\n    // Here you can call your service to update the data on the server\r\n\r\n    // Data updated successfully\r\n\r\n    console.log(\"data <<<<<<<<<<<<<<<<<<<<<<<<,\", event);\r\n  }\r\n\r\n  editConfirm(event: any) {\r\n    // Here you can call your service to update the data on the server\r\n\r\n    // Data updated successfully\r\n\r\n    console.log(\"data >>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<\");\r\n  }\r\n  userRowSelect(event: any) {\r\n    // Here you can call your service to update the data on the server\r\n\r\n    // Data updated successfully\r\n\r\n    console.log(\"data\");\r\n  }\r\n\r\n  onRowSelect(event: any) {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      event.confirm.resolve();\r\n      console.log(\"data\");\r\n    } else {\r\n      event.confirm.reject();\r\n    }\r\n    console.log(\"data deleted\");\r\n  }\r\n\r\n  onRowCreate(event: any) {\r\n    console.log(\"data create : \", event);\r\n  }\r\n\r\n  onRowDelete(event: any) {\r\n    console.log(\"data Delete : \", event);\r\n  }\r\n\r\n  onRowEdit(event: any) {\r\n    console.log(\"data Edition : \", event);\r\n  }\r\n}\r\n","<nb-card>\r\n  <nb-card-header>\r\n    Users list\r\n  </nb-card-header>\r\n  <nb-card-body>\r\n    <ng2-smart-table \r\n     [settings]=\"settings\" [source]=\"source\" \r\n     (deleteConfirm)=\"onDeleteConfirm($event)\" \r\n     (edit)=\"onRowEdit($event)\"\r\n    (delete)=\"onRowDelete($event)\">\r\n    </ng2-smart-table>\r\n  </nb-card-body>\r\n</nb-card>\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}